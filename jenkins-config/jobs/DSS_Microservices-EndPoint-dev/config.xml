<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@3.0">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritParentStrategy"/>
      <permission>hudson.model.Item.Build:sailaja</permission>
      <permission>hudson.model.Item.Build:saravanan</permission>
      <permission>hudson.model.Item.Cancel:sailaja</permission>
      <permission>hudson.model.Item.Cancel:saravanan</permission>
      <permission>hudson.model.Item.Read:sailaja</permission>
      <permission>hudson.model.Item.Read:saravanan</permission>
      <permission>hudson.model.Item.Workspace:sailaja</permission>
      <permission>hudson.model.Item.Workspace:saravanan</permission>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://git-codecommit.us-east-1.amazonaws.com/v1/repos/DSS_MicroServices</url>
        <credentialsId>af5bb371-bc67-4701-bcf5-2555dc97c5a1</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.0">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>com.kavi.services</groupId>
    <artifactId>EndpointServices</artifactId>
  </rootModule>
  <rootPOM>DSS_MicroServices/EndpointServices/pom.xml</rootPOM>
  <goals>clean install -Pdev</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>true</ignoreUpstremChanges>
  <ignoreUnsuccessfulUpstreams>false</ignoreUnsuccessfulUpstreams>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters/>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>DSS_MicroServices/EndpointServices/target/*.war</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.discardbuild.DiscardBuildPublisher plugin="discard-old-build@1.05">
      <daysToKeep>-1</daysToKeep>
      <numToKeep>10</numToKeep>
      <resultsToDiscard>
        <hudson.model.Result>
          <name>NOT_BUILT</name>
          <ordinal>3</ordinal>
          <color>NOTBUILT</color>
          <completeBuild>false</completeBuild>
        </hudson.model.Result>
        <hudson.model.Result>
          <name>ABORTED</name>
          <ordinal>4</ordinal>
          <color>ABORTED</color>
          <completeBuild>false</completeBuild>
        </hudson.model.Result>
        <hudson.model.Result>
          <name>FAILURE</name>
          <ordinal>2</ordinal>
          <color>RED</color>
          <completeBuild>true</completeBuild>
        </hudson.model.Result>
        <hudson.model.Result>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </hudson.model.Result>
        <hudson.model.Result>
          <name>UNSTABLE</name>
          <ordinal>1</ordinal>
          <color>YELLOW</color>
          <completeBuild>true</completeBuild>
        </hudson.model.Result>
      </resultsToDiscard>
      <minLogFileSize>-1</minLogFileSize>
      <maxLogFileSize>-1</maxLogFileSize>
      <intervalDaysToKeep>-1</intervalDaysToKeep>
      <intervalNumToKeep>-1</intervalNumToKeep>
      <regexp></regexp>
    </org.jenkinsci.plugins.discardbuild.DiscardBuildPublisher>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.34">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>true</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers/>
  <prebuilders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
DOCKER_LOGIN=`aws ecr get-login --region us-east-1 --no-include-email`
${DOCKER_LOGIN}</command>
    </hudson.tasks.Shell>
  </prebuilders>
  <postbuilders>
    <com.cloudbees.dockerpublish.DockerBuilder plugin="docker-build-publish@1.3.2">
      <server plugin="docker-commons@1.11"/>
      <registry plugin="docker-commons@1.11">
        <url>http://880111024226.dkr.ecr.us-east-1.amazonaws.com/endpointservices</url>
      </registry>
      <repoName>endpointservices</repoName>
      <noCache>false</noCache>
      <forcePull>true</forcePull>
      <dockerfilePath>DSS_MicroServices/EndpointServices/Dockerfile</dockerfilePath>
      <skipBuild>false</skipBuild>
      <skipDecorate>false</skipDecorate>
      <repoTag>v_$BUILD_NUMBER</repoTag>
      <skipPush>false</skipPush>
      <createFingerprint>true</createFingerprint>
      <skipTagLatest>false</skipTagLatest>
      <buildAdditionalArgs></buildAdditionalArgs>
      <forceTag>false</forceTag>
    </com.cloudbees.dockerpublish.DockerBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
#Constants

PROJECT_DIR=DSS_MicroServices/EndpointServices
REGION=us-east-1
REPOSITORY_NAME=endpointservices
CLUSTER=msyte-cluster
FAMILY=`sed -n &apos;s/.*&quot;family&quot;: &quot;\(.*\)&quot;,/\1/p&apos; ${WORKSPACE}/${PROJECT_DIR}/taskdef.json`
NAME=`sed -n &apos;s/.*&quot;name&quot;: &quot;\(.*\)&quot;,/\1/p&apos; ${WORKSPACE}/${PROJECT_DIR}/taskdef.json`
SERVICE_NAME=${NAME}-service

#Store the repositoryUri as a variable
REPOSITORY_URI=`aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} --region ${REGION} | jq .repositories[].repositoryUri | tr -d &apos;&quot;&apos;`

#Replace the build number and respository URI placeholders with the constants above
sed -e &quot;s;%BUILD_NUMBER%;${BUILD_NUMBER};g&quot; -e &quot;s;%REPOSITORY_URI%;${REPOSITORY_URI};g&quot; ${WORKSPACE}/${PROJECT_DIR}/taskdef.json &gt; ${WORKSPACE}/${PROJECT_DIR}/${NAME}-v_${BUILD_NUMBER}.json

#Register the task definition in the repository
aws ecs register-task-definition --family ${FAMILY} --cli-input-json file://${WORKSPACE}/${PROJECT_DIR}/${NAME}-v_${BUILD_NUMBER}.json --region ${REGION}
SERVICES=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq -r .services[].status`

#Get latest revision
REVISION=`aws ecs describe-task-definition --task-definition ${FAMILY} --region ${REGION} | jq .taskDefinition.revision`

#Create or update service
if [ &quot;$SERVICES&quot; == &quot;ACTIVE&quot; ]; then
  echo &quot;entered existing service&quot;
  DESIRED_COUNT=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq .services[].desiredCount`
  if [ ${DESIRED_COUNT} = &quot;0&quot; ]; then
    DESIRED_COUNT=&quot;1&quot;
  fi
  aws ecs update-service --cluster ${CLUSTER} --region ${REGION} --service ${SERVICE_NAME} --task-definition ${FAMILY}:${REVISION} --desired-count ${DESIRED_COUNT} --deployment-configuration maximumPercent=200,minimumHealthyPercent=50
else
  echo &quot;entered new service&quot;
  #aws ecs create-service --service-name ${SERVICE_NAME} --desired-count 1 --task-definition ${FAMILY} --cluster ${CLUSTER} --region ${REGION}
  aws ecs create-service --service-name ${SERVICE_NAME} --desired-count 1 --task-definition ${FAMILY} --cluster ${CLUSTER} --region ${REGION} --deployment-configuration maximumPercent=200,minimumHealthyPercent=50 --load-balancers targetGroupArn=arn:aws:elasticloadbalancing:us-east-1:880111024226:targetgroup/endpointservices-tgp/aec73b61e721fa9e,containerName=endpoint,containerPort=8080
fi</command>
    </hudson.tasks.Shell>
  </postbuilders>
  <runPostStepsIfResult>
    <name>SUCCESS</name>
    <ordinal>0</ordinal>
    <color>BLUE</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>